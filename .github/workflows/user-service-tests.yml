name: .NET Tests

on:
  push:
    branches:
      - microservice-implement
  pull_request:
    branches:
      - microservice-implement

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IssueAudience: ${{ secrets.ISSUE_AUDIENCE }}
      UserDbConnectionString: ${{ secrets.USER_DB_CONNECTION_STRING }}
      TestConnectionString: ${{ secrets.USER_TEST_DB_CONNECTION_STRING }}
      IssueSign: ${{ secrets.ISSUE_SIGN }}
      AdminEmail: ${{ secrets.ADMIN_EMAIL }}
      AdminUserName: ${{ secrets.ADMIN_USERNAME }}
      AdminPassword: ${{ secrets.ADMIN_PASSWORD }}
      DeveloperEmail: ${{ secrets.DEVELOPER_EMAIL }}
      DeveloperAppPassword: ${{ secrets.DEVELOPER_APP_PASSWORD }}
      GoogleClientId: ${{ secrets.GOOGLE_CLIENT_ID }}
      GoogleClientSecret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      FacebookClientId: ${{ secrets.FACEBOOK_CLIENT_ID }}
      FacebookClientSecret: ${{ secrets.FACEBOOK_CLIENT_SECRET }}
      FrontendUrlAndPort: ${{ secrets.FRONTEND_URL_AND_PORT }}
      HashiCorpToken: ${{ secrets.HASHICORP_TOKEN }}
      HashiCorpTestToken: ${{ secrets.HASHICORP_TEST_TOKEN }}
      HashiCorpAddress: ${{ secrets.HASHICORP_ADDRESS }}
      HashiCorpTestAddress: ${{ secrets.HASHICORP_TEST_ADDRESS }}
      ImageFolderPath: /app/Avatars

    steps:
    - uses: actions/checkout@v2

    - name: Start docker compose with env
      working-directory: Services/UserService/UserService
      run: |
        echo "ADMIN_PASSWORD=${AdminPassword}" >> .env
        docker compose up -d --build

    - name: Wait for TestPostgreSQL
      run: |
        until docker exec test_user_db pg_isready; do
          echo "Waiting for DB..."
          sleep 2
        done
        
    - name: Install EF Core tools
      run: dotnet tool install --global dotnet-ef --version 8.0.1

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0'

    - name: Restore dependencies
      run: dotnet restore Services/UserService/UserServiceTests/UserServiceTests.csproj

    - name: Set up test configuration
      run: echo "${{ secrets.USER_SERVICE_TEST_CONFIG_JSON }}" > user-service-test-config.json

    - name: Copy test configuration to project directory
      run: cp user-service-test-config.json Services/UserService/UserServiceTests

    - name: Build project
      working-directory: Services/UserService/UserService
      run: dotnet build --configuration Release --no-restore

    - name: Update test database for MainDatabaseContext
      run: >
        dotnet ef database update 
        --context MainDatabaseContext 
        --project Services/UserService/UserService 
        --startup-project Services/UserService/UserService 
        --connection "Host=localhost;Port=5434;Username=postgres;Password=testPassword123@;Database=test_user_db"

    - name: Test
      working-directory: Services/UserService/UserServiceTests
      run: dotnet test --no-restore --verbosity normal

    - name: Shut down docker compose
      if: always()
      working-directory: Services/UserService/UserService
      run: docker compose down --volumes
